{"absId":"rave@0.4.3/start","pluginId":"curl/loader/cjsm11","resourceId":"rave@0.4.3/start","loader":true,"source":"define('rave@0.4.3/start',['require','exports','module'],function(require,exports,module,define){/** @license MIT License (c) copyright 2014 original authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\nvar autoConfigure = require('./auto');\nvar run = require('./lib/run');\nvar debug = require('./debug');\n\nexports.main = function (context) {\n\tdebug.start(context);\n\t// Temporary way to not autoConfigure if it has been done already (e.g. in a build)\n\treturn Promise.resolve(context.packages ? context : autoConfigure(context))\n\t\t.then(\n\t\t\tfunction (context) {\n\t\t\t\tdebug.assertNoConflicts(context);\n\t\t\t\treturn context;\n\t\t\t},\n\t\t\tfunction (ex) {\n\t\t\t\tdebug.assertNoConflicts(context);\n\t\t\t\tthrow ex;\n\t\t\t}\n\t\t)\n\t\t.then(debug.logOverrides)\n\t\t.then(\n\t\t\tfunction (context) {\n\t\t\t\treturn run.main(context);\n\t\t\t}\n\t\t);\n};\n\nvar applyLoaderHooks = run.applyLoaderHooks;\n\nrun.applyLoaderHooks = function (context, extensions) {\n\tdebug.assertRavePackage(context);\n\treturn applyLoaderHooks.call(this, context, extensions)\n\t\t.then(function (result) {\n\t\t\tdebug.installDebugHooks(context);\n\t\t\treturn result;\n\t\t});\n};\n\n});\n\n","modules":[{"pos":0,"count":96,"id":"rave@0.4.3/start","depList":["require","exports","module"],"factory":true,"argList":["require","exports","module","define"],"requires":[{"id":"rave@0.4.3/auto","pos":236,"count":17},{"id":"rave@0.4.3/lib/run","pos":265,"count":20},{"id":"rave@0.4.3/debug","pos":299,"count":18}]}],"compileTime":"2014-11-17T20:58:47.379Z"}